services:
  backend:
    build:
      context: ./backend
    container_name: crm_backend
    command: ["./wait-for-mysql.sh", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - ./backend:/app
    ports:
      - "8888:8000"
    env_file:
      - .env
    depends_on:
      - db
      
  frontend:
    build:
      context: ./frontend
    container_name: crm_frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3001:3000"
    command: ["npm", "start"]
    environment:
      - CHOKIDAR_USEPOLLING=true  # Ãºtil no WSL/Windows
    depends_on:
      - backend

  db:
    image: mysql:8.0
    container_name: crm_db
    restart: always
    environment:
      MYSQL_DATABASE: crm_db
      MYSQL_ROOT_PASSWORD: admin_135
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data:


# version: '3.8'

# services:
#   backend:
#     build: 
#       context: .
#       dockerfile: Dockerfile
#     container_name: django_backend
#     volumes:
#       - ./backend:/app
#     ports:
#       - "8000:8000"
#     environment:
#       - DB_HOST=db
#       - DB_NAME=crm_db
#       - DB_USER=root
#       - DB_PASSWORD=admin
#     depends_on:
#       - db

#   frontend:
#     image: node:20
#     container_name: react_frontend
#     working_dir: /app
#     volumes:
#       - ./frontend:/app
#     ports:
#       - "3000:3000"
#     command: sh -c "npm install && npm start"

#   db:
#     image: mysql:8.0
#     container_name: mysql_db
#     restart: always
#     environment:
#       MYSQL_ROOT_PASSWORD: admin
#       MYSQL_DATABASE: crm_db
#     ports:
#       - "3306:3306"
#     volumes:
#       - db_data:/var/lib/mysql

# volumes:
#   db_data:
